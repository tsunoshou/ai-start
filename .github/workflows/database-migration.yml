name: Database Migration

on:
  push:
    branches:
      - main
      - development
      - 'release/*' # release/vX.Y.Z のようなブランチにマッチ
    # paths:
    #   - 'infrastructure/database/migrations/**' # 一時的にコメントアウトして常に実行

jobs:
  migrate-database:
    name: Supabase DB Migration
    # ブランチ名に応じて実行環境を決定
    runs-on: ubuntu-latest
    # Vercelの環境名に合わせる
    environment: ${{ (github.ref == 'refs/heads/main' && 'Production') || (startsWith(github.ref, 'refs/heads/release/') && 'staging') || 'Preview' }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm' # npm ci を使う場合

      - name: Install dependencies (including Supabase CLI)
        # npm ci で package-lock.json に記録されたバージョン (現在 1.162.4) の supabase がインストールされる
        run: npm ci

      - name: Temporarily move config.toml
        # マイグレーション実行前に config.toml を一時的にリネーム
        # ファイルが存在しなくてもエラーにならないように `|| true` を追加
        run: mv supabase/config.toml supabase/config.toml.bak || true

      - name: Apply database migrations
        # config.toml が存在しない状態で実行。DATABASE_URL が使われるはず。
        run: DATABASE_URL=${{ secrets.DATABASE_URL }} npx supabase migration up --debug

      - name: Restore config.toml
        # 成功・失敗に関わらず、config.toml を元の名前に戻す
        if: always()
        run: mv supabase/config.toml.bak supabase/config.toml || true
