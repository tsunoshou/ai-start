name: CI

on:
  pull_request:
    branches: [main, development, 'release/*']
  push:
    branches: [main, development, 'release/*']
    paths-ignore:
      - '**.md'
      - 'docs/**'

jobs:
  lint-and-test:
    name: 型チェック・コードスタイル・テスト
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4

      - name: Node.jsセットアップ
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: 依存関係インストール
        run: npm ci

      - name: コード形式チェック
        run: npm run format:check

      - name: Lint実行
        run: npm run lint

      - name: 型チェック
        run: npx tsc --noEmit

      - name: テスト実行
        run: npm test
        
  # セキュリティスキャンのみ残す（ビルドはVercelに任せる）
  security-scan:
    name: セキュリティチェック
    runs-on: ubuntu-latest
    needs: lint-and-test
    timeout-minutes: 5

    steps:
      - uses: actions/checkout@v4

      - name: Node.js セットアップ
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: 依存関係インストール
        run: npm ci

      - name: セキュリティ監査実行
        run: npm audit --production || true  # エラーがあっても続行

# ビルドはVercelで自動的に行われるためコメントアウト
# ビルドのチェックだけ行いたい場合は残してください
#  build-check:
#    name: ビルド確認
#    runs-on: ubuntu-latest
#    needs: lint-and-test
#    timeout-minutes: 5
#    steps:
#      - uses: actions/checkout@v4
#      - name: Node.jsセットアップ
#        uses: actions/setup-node@v4
#        with:
#          node-version: '20.x'
#          cache: 'npm'
#      - name: 依存関係インストール
#        run: npm ci
#      - name: ビルドチェック
#        run: npm run build
#        env:
#          SKIP_DB_TEST: 'true'
